name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  COMMON_CACHE_KEY: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Format
      run: cargo fmt --all --check

  lint:
    runs-on: ubuntu-latest
    needs: format
    env:
      CACHE_KEY: ${{ env.COMMON_CACHE_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ env.CACHE_KEY }}
          restore-keys: ${{ runner.os }}-build-
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run Clippy
        run: cargo clippy -- -D warnings

  build:
    runs-on: ubuntu-latest
    needs: lint
    env:
      CACHE_KEY: ${{ env.COMMON_CACHE_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ env.CACHE_KEY }}
          restore-keys: ${{ runner.os }}-build-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --verbose

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      CACHE_KEY: ${{ env.COMMON_CACHE_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ env.CACHE_KEY }}
          restore-keys: ${{ runner.os }}-build-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run tests
        run: cargo test --verbose
